Euglena=function(a,b,c,d,e){function f(a,b,c,d,e,f,g,h,i,j){var k=new THREE.Face3(c,d,e,g,h,i);k.name=a,b.faces.push(k),k=new THREE.Face3(f,e,d,g,h,j),k.name=a,b.faces.push(k)}THREE.Mesh.call(this),this.degToRads=Math.PI/180,this.radToDegs=180/Math.PI,this.initLength=a.x,this.initWidth=a.y,this.initHeight=a.z,this.inertialAxes=e,this.localAxes=new THREE.AxisHelper(2*this.initLength),this.localAxes.position.set(this.position.x,this.position.y,this.position.z),this.add(this.localAxes),this.length=this.initLength,this.width=this.initWidth,this.height=this.initHeight,this.position.set(b.x,b.y,b.z),this.geometry=new THREE.Geometry,this.geometry.vertices.push(new THREE.Vector3(this.length,0,0)),this.geometry.vertices.push(new THREE.Vector3(this.length,this.width,0)),this.geometry.vertices.push(new THREE.Vector3(this.length,0,this.height)),this.geometry.vertices.push(new THREE.Vector3(this.length,this.width,this.height)),this.geometry.vertices.push(new THREE.Vector3(0,0,0)),this.geometry.vertices.push(new THREE.Vector3(0,0,this.height)),this.geometry.vertices.push(new THREE.Vector3(0,this.width,0)),this.geometry.vertices.push(new THREE.Vector3(0,this.width,this.height)),this.geometry.applyMatrix((new THREE.Matrix4).makeTranslation(.5*-this.length,.5*-this.width,.5*-this.height));var g=1;this.materials=[],this.materials.push(new THREE.MeshBasicMaterial({color:16711680,side:THREE.DoubleSide,opacity:g,transparent:!0})),this.materials.push(new THREE.MeshBasicMaterial({color:255,side:THREE.DoubleSide,opacity:g,transparent:!0})),this.materials.push(new THREE.MeshBasicMaterial({color:16776960,side:THREE.DoubleSide,opacity:g,transparent:!0})),this.materials.push(new THREE.MeshBasicMaterial({color:65535,side:THREE.DoubleSide,opacity:g,transparent:!0})),this.materials.push(new THREE.MeshBasicMaterial({color:16711935,side:THREE.DoubleSide,opacity:g,transparent:!0})),this.materials.push(new THREE.MeshBasicMaterial({color:65280,side:THREE.DoubleSide,opacity:g,transparent:!0})),this.material=new THREE.MeshFaceMaterial(this.materials);var h=new THREE.Color(16711680);f("front",this.geometry,0,1,2,3,new THREE.Vector3(1,0,0),h,0,0),f("back",this.geometry,4,5,6,7,new THREE.Vector3(-1,0,0),h,1,1),f("left",this.geometry,1,6,3,7,new THREE.Vector3(0,1,0),h,2,2),f("top",this.geometry,3,7,2,5,new THREE.Vector3(0,0,1),h,3,3),f("right",this.geometry,4,0,5,2,new THREE.Vector3(0,-1,0),h,4,4),f("bottom",this.geometry,4,0,6,1,new THREE.Vector3(0,0,-1),h,5,5),this.setRotation(c),this.surge={},this.roll={},this.pitch={},this.yaw={},this.hasRoll=!1,this.hasYaw=!1,this.updateCounter=0,this.caseselect=0},Euglena.prototype=Object.create(THREE.Mesh.prototype),Euglena.prototype.setTest=function(a){for(var b=[],c=2/a.rollPerFrame,d=Math.PI*a.rollPerFrame,e=0;c>e;e++){var f=new THREE.Quaternion,g=new THREE.Vector3(0,Math.sin(d*(e+1)),Math.cos(d*(e+1)));f.setFromAxisAngle(g,a.turnPerFrame),b.push({frame:e,q:f})}var h=new THREE.Quaternion;h.setFromAxisAngle(new THREE.Vector3(1,0,0),d),b.sort(function(a,b){return a.frame-b.frame});for(var i=new THREE.Quaternion,j=0;2>j;j++)i.multiplyQuaternions(i,h),i.multiplyQuaternions(i,b[j%c].q);this.quaternion.multiplyQuaternions(this.quaternion,i),this.updateMatrixWorld()},Euglena.prototype.setSize=function(a,b,c){this.scale.x=a/this.initLength,this.scale.y=b/this.initWidth,this.scale.z=c/this.initHeight},Euglena.prototype.setPosition=function(a,b,c){this.position.x=Number(a),this.position.y=Number(b),this.position.z=Number(c)},Euglena.prototype.setRotation=function(a,b,c){this.rotation.x=Number(a*Math.PI),this.rotation.y=Number(b*Math.PI),this.rotation.z=Number(c*Math.PI)},Euglena.prototype.setDynamics=function(a,b,c,d,e,f){d=e,this.caseselect=Number(f),this.surge={vector:new THREE.Vector3(1,0,0),value:.05*a},this.roll={quaternion:new THREE.Quaternion,value:b,frames:1},this.yaw={quaternion:new THREE.Quaternion,vector:new THREE.Vector3,value:1e-4*d,rollCorrectionVectors:[]},this.hasRoll=!1,this.hasYaw=!1;var g=this.roll.value;if(this.roll.value>0){this.hasRoll=!0;var h=[1,.5,.4,.25,.2,.08,.05,.04,.02,.01];b=h[0];for(var i=1;i<h.length&&this.roll.value!=b&&!(this.roll.value>b);i++)b=h[i];h.sort(function(a,b){return a-b}),b=h[g-1],this.roll.value=Math.PI*b,this.roll.quaternion.setFromAxisAngle(new THREE.Vector3(1,0,0),this.roll.value),this.roll.frames=2/b;for(var j=0;j<this.roll.frames;j++){var k=new THREE.Vector3(0,Math.sin(this.roll.value*(j+1)),Math.cos(this.roll.value*(j+1)));this.yaw.rollCorrectionVectors.push({frame:j,vector:k})}this.yaw.rollCorrectionVectors.sort(function(a,b){return a.frame-b.frame})}this.hasRoll&&Math.abs(this.yaw.value)>0?(this.hasYaw=!0,this.yaw.vector=new THREE.Vector3(0,0,1)):Math.abs(this.yaw.value)>0&&(this.hasYaw=!0,this.yaw.vector=new THREE.Vector3(0,0,1)),this.frame=0,this.updateCounter2=0,this.runDatas=[]},Euglena.prototype.update=function(a,b,c,d){var e={"case":this.caseselect,posyFace:{},negyFace:{}};e.light={left:a,right:b,top:c,bottom:d},e.frame=this.frame;var f=new THREE.Vector3(1,0,0);f.applyQuaternion(this.quaternion),e.atan2=Math.atan2(f.y,f.x),e.sin=Math.sin(e.atan2),e.cos=Math.cos(e.atan2),e.xValue={left:a*e.sin,right:-1*b*e.sin,top:c*e.cos,bottom:-1*d*e.cos},e.x=e.xValue.left+e.xValue.right+e.xValue.top+e.xValue.bottom,e.posyFace.value=0;var g=new THREE.Vector3(0,1,0);g.applyQuaternion(this.quaternion),e.posyFace.left=0,a>0&&(e.posyFace.leftAngle=g.angleTo(new THREE.Vector3(-1,0,0)),e.posyFace.leftValue=Math.cos(e.posyFace.leftAngle)*a,e.posyFace.leftValue<0?e.posyFace.left=0:e.posyFace.left=e.posyFace.leftValue),e.posyFace.right=0,b>0&&(e.posyFace.rightAngle=g.angleTo(new THREE.Vector3(1,0,0)),e.posyFace.rightValue=Math.cos(e.posyFace.rightAngle)*b,e.posyFace.rightValue<0?e.posyFace.right=0:e.posyFace.right=e.posyFace.rightValue),e.posyFace.top=0,c>0&&(e.posyFace.topAngle=g.angleTo(new THREE.Vector3(0,1,0)),e.posyFace.topValue=Math.cos(e.posyFace.topAngle)*c,e.posyFace.topValue<0?e.posyFace.top=0:e.posyFace.top=e.posyFace.topValue),e.posyFace.bottom=0,d>0&&(e.posyFace.bottomAngle=g.angleTo(new THREE.Vector3(0,-1,0)),e.posyFace.bottomValue=Math.cos(e.posyFace.bottomAngle)*d,e.posyFace.bottomValue<0?e.posyFace.bottom=0:e.posyFace.bottom=e.posyFace.bottomValue),e.posyFace.value=e.posyFace.left+e.posyFace.right+e.posyFace.top+e.posyFace.bottom,e.negyFace.value=0;var g=new THREE.Vector3(0,-1,0);switch(g.applyQuaternion(this.quaternion),e.negyFace.left=0,a>0&&(e.negyFace.left=Math.cos(g.angleTo(new THREE.Vector3(-1,0,0)))*a,e.negyFace.left<0&&(e.negyFace.left=0)),e.negyFace.right=0,b>0&&(e.negyFace.right=Math.cos(g.angleTo(new THREE.Vector3(1,0,0)))*b,e.negyFace.right<0&&(e.negyFace.right=0)),e.negyFace.top=0,c>0&&(e.negyFace.top=Math.cos(g.angleTo(new THREE.Vector3(0,1,0)))*c,e.negyFace.top<0&&(e.negyFace.top=0)),e.negyFace.bottom=0,d>0&&(e.negyFace.bottom=Math.cos(g.angleTo(new THREE.Vector3(0,-1,0)))*d,e.negyFace.bottom<0&&(e.negyFace.bottom=0)),e.negyFace.value=e.negyFace.left+e.negyFace.right+e.negyFace.top+e.negyFace.bottom,this.caseselect){case 1:e.yawMod=e.x,this.hasRoll=!1;break;case 2:e.yawMod=e.posyFace.value-e.negyFace.value,this.hasRoll=!1;break;case 3:e.yawMod=e.posyFace.value;break;default:e.yawMod=0}return this.runDatas.push(e),this.translateOnAxis(this.surge.vector,this.surge.value),this.hasRoll&&this.hasYaw?(this.yaw.quaternion=new THREE.Quaternion,this.yaw.quaternion.setFromAxisAngle(this.yaw.rollCorrectionVectors[this.updateCounter%this.roll.frames].vector,e.yawMod*this.yaw.value),this.quaternion.multiplyQuaternions(this.quaternion,this.roll.quaternion),this.quaternion.multiplyQuaternions(this.quaternion,this.yaw.quaternion),this.updateMatrix(),this.updateMatrixWorld()):this.hasRoll?(this.quaternion.multiplyQuaternions(this.quaternion,this.roll.quaternion),this.updateMatrix(),this.updateMatrixWorld()):this.hasYaw&&(this.yaw.quaternion=new THREE.Quaternion,this.yaw.quaternion.setFromAxisAngle(this.yaw.vector,e.yawMod*this.yaw.value),this.quaternion.multiplyQuaternions(this.quaternion,this.yaw.quaternion),this.updateMatrix(),this.updateMatrixWorld()),this.frame++,e};
//# sourceMappingURL=Euglena.min.js.map