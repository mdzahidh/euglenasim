'use strict';
var myPrintType=-1;
var myPrintTag='routes.js'
function myPrint(type, str) {
  if(type<=myPrintType) {console.log(type+'.'+myPrintTag+': '+str);}
}


function ensureAuthenticated(req, res, next) {
  myPrint(0, 'ensureAuthenticated');
  if (req.isAuthenticated()) {return next();}
  res.set('X-Auth-Required', 'true');
  req.session.returnUrl = req.originalUrl;
  res.redirect('/login/');
}

function ensureAdmin(req, res, next) {
  myPrint(0, 'ensureAdmin');
  if (req.user.canPlayRoleOf('admin')) {
    return next();
  }
  res.redirect('/');
}
function ensureOpen(req, res, next) {
  myPrint(0, 'ensureOpen');
  if (req.app.locals.myIsLive='false') {
    return next();
  }
  res.redirect('/');
}
function ensureDebug(req, res, next) {
  myPrint(0, 'ensureDebug');
  if (req.app.locals.myIsDebug='false') {
    return next();
  }
  res.redirect('/');
}

function ensureAccount(req, res, next) {
  myPrint(0, 'ensureAccount');
  if (req.user.canPlayRoleOf('account')) {
    if (req.app.config.requireAccountVerification) {
      if (req.user.roles.account.isVerified !== 'yes' && !/^\/account\/verification\//.test(req.url)) {
        return res.redirect('/account/verification/');
      }
    }
    return next();
  }
  res.redirect('/');
}
function checkDisowned(req, res, next) {
  myPrint(0, 'checkDisowned');
  var isValid=true;
  for(var i=0;i<req.app.myLoggedIn.length;i++) {
    var item=req.app.myLoggedIn[i];
    if(item.sessionID==req.sessionID) { 
      if(item.isDisowned) {
        req.app.myLoggedIn.splice(i, 1);
        isValid=false;
        break;
      }
    }
  };
  if(isValid) {
    return next();
  } else {
    res.redirect('/logout/');
  }
}
exports = module.exports = function(app, passport) {
  myPrint(0, 'app.gets');
  app.myLoggedIn=[];
  //front end
   
  app.get('/', require('./views/index').init);
  app.get('/about/', require('./views/about/index').init);
  app.get('/contact/', require('./views/contact/index').init);
  app.post('/contact/', require('./views/contact/index').sendMessage);
 
  //sign up
  app.all('/signup*', ensureOpen);
  app.get('/signup/', require('./views/signup/index').init);
  app.post('/signup/', require('./views/signup/index').signup);

  //social sign up
  app.post('/signup/social/', require('./views/signup/index').signupSocial);
  app.get('/signup/twitter/', passport.authenticate('twitter', { callbackURL: '/signup/twitter/callback/' }));
  app.get('/signup/twitter/callback/', require('./views/signup/index').signupTwitter);
  app.get('/signup/github/', passport.authenticate('github', { callbackURL: '/signup/github/callback/', scope: ['user:email'] }));
  app.get('/signup/github/callback/', require('./views/signup/index').signupGitHub);
  app.get('/signup/facebook/', passport.authenticate('facebook', { callbackURL: '/signup/facebook/callback/', scope: ['email'] }));
  app.get('/signup/facebook/callback/', require('./views/signup/index').signupFacebook);
  app.get('/signup/google/', passport.authenticate('google', { callbackURL: '/signup/google/callback/', scope: ['profile email'] }));
  app.get('/signup/google/callback/', require('./views/signup/index').signupGoogle);
  app.get('/signup/tumblr/', passport.authenticate('tumblr', { callbackURL: '/signup/tumblr/callback/' }));
  app.get('/signup/tumblr/callback/', require('./views/signup/index').signupTumblr);
  //login/out
  app.get('/login/', require('./views/login/index').init);
  app.post('/login/', require('./views/login/index').login);
  //app.get('/login/forgot/', require('./views/login/forgot/index').init);
  //app.post('/login/forgot/', require('./views/login/forgot/index').send);
  app.get('/login/reset/', require('./views/login/reset/index').init);
  app.get('/login/reset/:email/:token/', require('./views/login/reset/index').init);
  app.put('/login/reset/:email/:token/', require('./views/login/reset/index').set);
  app.get('/logout/', require('./views/logout/index').init);

  //social login
  app.get('/login/twitter/', passport.authenticate('twitter', { callbackURL: '/login/twitter/callback/' }));
  app.get('/login/twitter/callback/', require('./views/login/index').loginTwitter);
  app.get('/login/github/', passport.authenticate('github', { callbackURL: '/login/github/callback/' }));
  app.get('/login/github/callback/', require('./views/login/index').loginGitHub);
  app.get('/login/facebook/', passport.authenticate('facebook', { callbackURL: '/login/facebook/callback/' }));
  app.get('/login/facebook/callback/', require('./views/login/index').loginFacebook);
  app.get('/login/google/', passport.authenticate('google', { callbackURL: '/login/google/callback/', scope: ['profile email'] }));
  app.get('/login/google/callback/', require('./views/login/index').loginGoogle);
  app.get('/login/tumblr/', passport.authenticate('tumblr', { callbackURL: '/login/tumblr/callback/', scope: ['profile email'] }));
  app.get('/login/tumblr/callback/', require('./views/login/index').loginTumblr);

  //admin
  app.all('/admin*', ensureAuthenticated);
  app.all('/admin*', ensureAdmin);
  app.get('/admin/', require('./views/admin/index').init);

  //admin > users
  app.get('/admin/users/', require('./views/admin/users/index').find);
  app.post('/admin/users/', require('./views/admin/users/index').create);
  app.get('/admin/users/:id/', require('./views/admin/users/index').read);
  app.put('/admin/users/:id/', require('./views/admin/users/index').update);
  app.put('/admin/users/:id/password/', require('./views/admin/users/index').password);
  app.put('/admin/users/:id/role-admin/', require('./views/admin/users/index').linkAdmin);
  app.delete('/admin/users/:id/role-admin/', require('./views/admin/users/index').unlinkAdmin);
  app.put('/admin/users/:id/role-account/', require('./views/admin/users/index').linkAccount);
  app.delete('/admin/users/:id/role-account/', require('./views/admin/users/index').unlinkAccount);
  app.delete('/admin/users/:id/', require('./views/admin/users/index').delete);

  //admin > administrators
  app.get('/admin/administrators/', require('./views/admin/administrators/index').find);
  app.post('/admin/administrators/', require('./views/admin/administrators/index').create);
  app.get('/admin/administrators/:id/', require('./views/admin/administrators/index').read);
  app.put('/admin/administrators/:id/', require('./views/admin/administrators/index').update);
  app.put('/admin/administrators/:id/permissions/', require('./views/admin/administrators/index').permissions);
  app.put('/admin/administrators/:id/groups/', require('./views/admin/administrators/index').groups);
  app.put('/admin/administrators/:id/user/', require('./views/admin/administrators/index').linkUser);
  app.delete('/admin/administrators/:id/user/', require('./views/admin/administrators/index').unlinkUser);
  app.delete('/admin/administrators/:id/', require('./views/admin/administrators/index').delete);

  //admin > admin groups
  app.get('/admin/admin-groups/', require('./views/admin/admin-groups/index').find);
  app.post('/admin/admin-groups/', require('./views/admin/admin-groups/index').create);
  app.get('/admin/admin-groups/:id/', require('./views/admin/admin-groups/index').read);
  app.put('/admin/admin-groups/:id/', require('./views/admin/admin-groups/index').update);
  app.put('/admin/admin-groups/:id/permissions/', require('./views/admin/admin-groups/index').permissions);
  app.delete('/admin/admin-groups/:id/', require('./views/admin/admin-groups/index').delete);

  //admin > accounts
  app.get('/admin/accounts/', require('./views/admin/accounts/index').find);
  app.post('/admin/accounts/', require('./views/admin/accounts/index').create);
  app.get('/admin/accounts/:id/', require('./views/admin/accounts/index').read);
  app.put('/admin/accounts/:id/', require('./views/admin/accounts/index').update);
  app.put('/admin/accounts/:id/user/', require('./views/admin/accounts/index').linkUser);
  app.delete('/admin/accounts/:id/user/', require('./views/admin/accounts/index').unlinkUser);
  app.post('/admin/accounts/:id/notes/', require('./views/admin/accounts/index').newNote);
  app.post('/admin/accounts/:id/status/', require('./views/admin/accounts/index').newStatus);
  app.delete('/admin/accounts/:id/', require('./views/admin/accounts/index').delete);

  //admin > statuses
  app.get('/admin/statuses/', require('./views/admin/statuses/index').find);
  app.post('/admin/statuses/', require('./views/admin/statuses/index').create);
  app.get('/admin/statuses/:id/', require('./views/admin/statuses/index').read);
  app.put('/admin/statuses/:id/', require('./views/admin/statuses/index').update);
  app.delete('/admin/statuses/:id/', require('./views/admin/statuses/index').delete);

  //admin > categories
  app.get('/admin/categories/', require('./views/admin/categories/index').find);
  app.post('/admin/categories/', require('./views/admin/categories/index').create);
  app.get('/admin/categories/:id/', require('./views/admin/categories/index').read);
  app.put('/admin/categories/:id/', require('./views/admin/categories/index').update);
  app.delete('/admin/categories/:id/', require('./views/admin/categories/index').delete);

  //admin > search
  app.get('/admin/search/', require('./views/admin/search/index').find);

  //account
  app.all('/account*', checkDisowned);
  app.all('/account*', ensureAuthenticated);
  app.all('/account*', ensureAccount);
 
   
  //account > rawview
  //app.get('/account/', require('./views/account/rawview/index').init);
 
  //auto start//account > liveview 
  app.get('/account/', require('./views/account/modeling/index').init);
 
  //account > liveview 
  //app.get('/account/', require('./views/account/liveview/index').init);
 
  //account > verification
  app.get('/account/verification/', require('./views/account/verification/index').init);
  app.post('/account/verification/', require('./views/account/verification/index').resendVerification);
  app.get('/account/verification/:token/', require('./views/account/verification/index').verify);

  //account > Raw View 
  app.get('/account/rawview/', require('./views/account/rawview/index').init);
  app.post('/account/rawview/editor/updateimageset', require('./views/account/rawview/index').updateImageSet);
  app.post('/account/rawview/editor/changeimageset', require('./views/account/rawview/index').changeImageSet);

  //account > counter 
  app.get('/account/counter/', require('./views/account/counter/index').init);
  app.post('/account/counter/editor/updateimageset', require('./views/account/counter/index').updateImageSet);

  //account > liveview 
  app.get('/account/liveview/', require('./views/account/liveview/index').init);
  app.post('/account/liveview/editor/updateimageset', require('./views/account/liveview/index').updateImageSet);
  app.put('/account/liveview/updatelabsession/', require('./views/account/liveview/index').updateLabSession);

  //account > procview 
  app.get('/account/procview/', require('./views/account/procview/index').init);
  app.post('/account/procview/editor/updateimageset', require('./views/account/procview/index').updateImageSet);
  app.put('/account/procview/updatelabsession/', require('./views/account/procview/index').updateLabSession);

  //account > modeling
  app.get('/account/modeling/', require('./views/account/modeling/index').init);
  app.put('/account/modeling/update/', require('./views/account/modeling/index').update);
  app.put('/account/modeling/saveModelParameters/', require('./views/account/modeling/index').saveModelParameters);
  app.put('/account/modeling/updatelabsession/', require('./views/account/modeling/index').updateLabSession);
  
  //account > joymodel 
  app.get('/account/joymodel/', require('./views/account/joymodel/index').init);
  app.put('/account/joymodel/update/', require('./views/account/joymodel/index').update);
  app.put('/account/joymodel/saveModelParameters/', require('./views/account/joymodel/index').saveModelParameters);
  app.put('/account/joymodel/updatelabsession/', require('./views/account/joymodel/index').updateLabSession);

  //account > tracking 
  app.get('/account/tracking/', require('./views/account/tracking/index').init);
  app.post('/account/tracking/editor/updateimageset', require('./views/account/tracking/index').updateImageSet);
  app.post('/account/tracking/editor/changeimageset', require('./views/account/tracking/index').changeImageSet);
  app.post('/account/tracking/editor/updateSetPath', require('./views/account/tracking/index').updateSetPath);
  app.post('/account/tracking/editor/changeSetPath', require('./views/account/tracking/index').changeSetPath);
  //account > trackingModeling2d
  app.get('/account/trackingModeling2d/', require('./views/account/trackingModeling2d/index').init);
  app.put('/account/trackingModeling2d/saveModelParameters/', require('./views/account/trackingModeling2d/index').saveModelParameters);

  //account > trackingModeling2d_new
  app.get('/account/trackingModeling2d_new/', require('./views/account/trackingModeling2d_new/index').init);


  //route not found
  app.all('*', require('./views/http/index').http404);
};
